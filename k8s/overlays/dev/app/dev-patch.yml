apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      containers:
        - name: api-gateway
          volumeMounts:
            - name: nfs-logs-pvc-volume
              mountPath: /app/logs
      volumes:
        - name: nfs-logs-pvc-volume
          persistentVolumeClaim:
            claimName: nfs-logs-pvc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
spec:
  selector:
    matchLabels:
      app: auth-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: auth-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8090"
    spec:
      containers:
        - name: auth-service
          volumeMounts:
            - name: nfs-logs-pvc-volume
              mountPath: /app/logs
      volumes:
        - name: nfs-logs-pvc-volume
          persistentVolumeClaim:
            claimName: nfs-logs-pvc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscription-service
spec:
  selector:
    matchLabels:
      app: subscription-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: subscription-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8070"
    spec:
      containers:
        - name: subscription-service
          volumeMounts:
            - name: nfs-logs-pvc-volume
              mountPath: /app/logs
      volumes:
        - name: nfs-logs-pvc-volume
          persistentVolumeClaim:
            claimName: nfs-logs-pvc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
spec:
  selector:
    matchLabels:
      app: ai-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: ai-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8999"
    spec:
      containers:
        - name: ai-service
          volumeMounts:
            - name: nfs-logs-pvc-volume
              mountPath: /app/logs
            - name: nfs-documents-pvc-volume
              mountPath: /app/documents
      volumes:
        - name: nfs-logs-pvc-volume
          persistentVolumeClaim:
            claimName: nfs-logs-pvc
        - name: nfs-documents-pvc-volume
          persistentVolumeClaim:
            claimName: nfs-documents-pvc