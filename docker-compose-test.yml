services:
  zookeeper-0:
    image: zookeeper:latest
    container_name: zookeeper-0
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper-0:2888:3888;2181 server.2=zookeeper-1:2888:3888;2181 server.3=zookeeper-2:2888:3888;2181
    networks:
      - test

  zookeeper-1:
    image: zookeeper:latest
    container_name: zookeeper-1
    ports:
      - "2182:2181"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper-0:2888:3888;2181 server.2=zookeeper-1:2888:3888;2181 server.3=zookeeper-2:2888:3888;2181
    networks:
      - test

  zookeeper-2:
    image: zookeeper:latest
    container_name: zookeeper-2
    ports:
      - "2183:2181"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zookeeper-0:2888:3888;2181 server.2=zookeeper-1:2888:3888;2181 server.3=zookeeper-2:2888:3888;2181
    networks:
      - test

  kafka-0:
    image: wurstmeister/kafka:latest
    container_name: kafka-0
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-0:2181,zookeeper-1:2182,zookeeper-2:2183
      KAFKA_LISTENERS: INTERNAL://kafka-0:19092,EXTERNAL://kafka-0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-0:19092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    depends_on:
      - zookeeper-0
      - zookeeper-1
      - zookeeper-2
    networks:
      - test

  kafka-1:
    image: wurstmeister/kafka:latest
    container_name: kafka-1
    ports:
      - "9093:9093"
      - "19093:19093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-0:2181,zookeeper-1:2182,zookeeper-2:2183
      KAFKA_LISTENERS: INTERNAL://kafka-1:19093,EXTERNAL://kafka-1:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19093,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    depends_on:
      - zookeeper-0
      - zookeeper-1
      - zookeeper-2
    networks:
      - test

  kafka-2:
    image: wurstmeister/kafka:latest
    container_name: kafka-2
    ports:
      - "9094:9094"
      - "19094:19094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-0:2181,zookeeper-1:2182,zookeeper-2:2183
      KAFKA_LISTENERS: INTERNAL://kafka-2:19094,EXTERNAL://kafka-2:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:19094,EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    depends_on:
      - zookeeper-0
      - zookeeper-1
      - zookeeper-2
    networks:
      - test

  mysql-source:
    image: mysql:latest
    container_name: mysql-source
    ports:
      - "13306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Seoul
    volumes:
      - ./conf/mysql/my-source.cnf:/etc/mysql/my.cnf
    networks:
      - test

  mysql-replica:
    image: mysql:latest
    container_name: mysql-replica
    ports:
      - "23306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Seoul
    volumes:
      - ./conf/mysql/my-replica.cnf:/etc/mysql/my.cnf
    depends_on:
      - mysql-source
    networks:
      - test

  pg-source:
    image: postgres:latest
    container_name: pg-source
    ports:
      - "15432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
    volumes:
      - ./conf/postgres/postgres.conf:/etc/postgresql/postgresql.conf
      - ./conf/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
    restart: always
    networks:
      - test

  pg-replica:
    image: postgres:latest
    container_name: pg-replica
    ports:
      - "25432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - pg-source
    restart: always
    networks:
      - test

  redis-0:
    image: redis:latest
    container_name: redis-0
    ports:
      - "6379:6379"
      - "16379:16379"
    volumes:
      - ./conf/redis/redis-0.conf:/etc/redis.conf
    restart: always
    networks:
      - test

networks:
  test: