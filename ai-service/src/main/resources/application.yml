spring:
  application:
    name: ai-service
  profiles:
    active: ${APPLICATION_PROFILE:local}
  kafka:
    consumer:
      group-id: ai-service-group
  data:
    redis:
      connect-timeout: 3000
      timeout: 3000
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    prometheus:
      access: read_only
  prometheus:
    metrics:
      export:
        enabled: true
  health:
    r2dbc:
      enabled: false
---
server:
  port: 8999
spring:
  config:
    activate:
      on-profile: local
  cloud:
    config:
      enabled: false
  ai:
    openai:
      base-url: ${groq.base-url}
      api-key: ${groq.api-key}
      chat:
        options:
          model: ${groq.model}
    ollama:
      chat:
        model: ${ollama.model}
  data:
    redis:
      cluster:
        nodes: ${REDIS_CLUSTER_NODES:localhost:6379}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092,localhost:9093,localhost:9094}
app:
  ai:
    kafka:
      num-of-partitions: 9
      replication-factor: 3
---
spring:
  config:
    activate:
      on-profile: dev
    import: configserver:http://config-server:8888/
  cloud:
    config:
      name: ai-service
      profile: dev