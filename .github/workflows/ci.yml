name: CI - Build and Unit Test

on:
  pull_request:
    branches: [ develop ]

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Build project (excluding tests)
        run: ./gradlew build -x test --stacktrace

  unit-tests:
    name: Run Unit & Integration Tests
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Write application.properties to Core Module
        run: |
          mkdir -p core/src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > core/src/main/resources/application.properties
          echo "${{ secrets.ENV }}" > .env

      - name: Set up Docker Containers
        run: |
          docker compose -f docker-compose-local.yml --env-file .env up -d
          sleep 10
          docker compose -f docker-compose-local.yml ps

      - name: Run Unit & Integration Tests
        run: ./gradlew test --stacktrace

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/reports/tests/test/
            **/build/test-results/test/
          retention-days: 7

      - name: Publish Test Results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: 'Test Results'
          path: '**/build/test-results/test/*.xml'
          reporter: java-junit
          fail-on-error: true

      - name: Add Test Summary
        if: always()
        run: |
          echo "## 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # 테스트 결과 요약 생성
          for module in auth-service subscription-service api-gateway core; do
            if [ -f "$module/build/test-results/test/TEST-*.xml" ]; then
              echo "### $module" >> $GITHUB_STEP_SUMMARY
              echo "Tests executed for $module module" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          # 테스트 실패 시 로그 출력
          if [ $? -ne 0 ]; then
            echo "❌ Some tests failed. Check the detailed reports above." >> $GITHUB_STEP_SUMMARY
          else  
            echo "✅ All tests passed successfully!" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Clean up Docker Containers
        if: always()
        run: |
          docker compose -f docker-compose-local.yml down --volumes --remove-orphans