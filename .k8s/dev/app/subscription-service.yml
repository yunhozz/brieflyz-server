apiVersion: v1
kind: Service
metadata:
  name: subscription-service
  namespace: dev
  labels:
    app: subscription-service
spec:
  selector:
    app: subscription-service
  ports:
    - port: 8070

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscription-service
  namespace: dev
  labels:
    app: subscription-service
spec:
  selector:
    matchLabels:
      app: subscription-service
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: subscription-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8070"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - subscription-service
              weight: 100
      containers:
        - name: subscription-service
          image: ghcr.io/yunhozz/brieflyz-subscription-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8070
          env:
            - name: APPLICATION_PROFILE
              value: dev
            - name: TZ
              value: Asia/Seoul
          volumeMounts:
            - name: nfs-logs-pvc-volume
              mountPath: /app/logs
      imagePullSecrets:
        - name: ghcr-secret
      volumes:
        - name: nfs-logs-pvc-volume
          persistentVolumeClaim:
            claimName: nfs-logs-pvc