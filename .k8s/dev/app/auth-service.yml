apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: dev
  labels:
    app: auth-service
spec:
  selector:
    app: auth-service
  ports:
    - port: 8090

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: dev
  labels:
    app: auth-service
spec:
  selector:
    matchLabels:
      app: auth-service
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: auth-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8090"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - auth-service
      containers:
        - name: auth-service
          image: ghcr.io/yunhozz/brieflyz-auth-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8090
          env:
            - name: APPLICATION_PROFILE
              value: dev
            - name: TZ
              value: Asia/Seoul
          volumeMounts:
            - name: auth-service-logs-pvc-volume
              mountPath: /app/logs
      imagePullSecrets:
        - name: ghcr-secret
      volumes:
        - name: auth-service-logs-pvc-volume
          persistentVolumeClaim:
            claimName: nfs-pvc